// utils/beerTypeHandler.js - Utility ƒë·ªÉ handle c√°c lo·∫°i bia kh√°c nhau

import riverFields from '../assets/river.json';
// import hanoiFields from '../assets/hanoi.json';  // T·∫°o sau
// import chaihgFields from '../assets/chaihg.json'; // T·∫°o sau

export const getFieldDefinitions = (beerType) => {
  switch (beerType?.toLowerCase()) {
    case 'hanoi':
      // return hanoiFields; // S·∫Ω t·∫°o sau
      return riverFields; // T·∫°m th·ªùi d√πng river
    case 'chaihg':
      // return chaihgFields; // S·∫Ω t·∫°o sau  
      return riverFields; // T·∫°m th·ªùi d√πng river
    case 'river':
    default:
      return riverFields;
  }
};

export const detectBeerTypeFromData = (data, fileName) => {
  // Detect t·ª´ filename
  if (fileName) {
    const lowerFileName = fileName.toLowerCase();
    if (lowerFileName.includes('hanoi')) return 'hanoi';
    if (lowerFileName.includes('chaihg') || lowerFileName.includes('chai')) return 'chaihg';
  }
  
  // Detect t·ª´ data fields
  if (data.beer_type) {
    return data.beer_type.toLowerCase();
  }
  
  // Detect t·ª´ c√°c field ƒë·∫∑c trung
  if (data.hanoi_specific_field) return 'hanoi';
  if (data.chaihg_specific_field) return 'chaihg';
  
  // Default
  return 'river';
};

export const getBeerTypeDisplayInfo = (beerType) => {
  switch (beerType?.toLowerCase()) {
    case 'hanoi':
      return {
        name: 'Bia H√† N·ªôi',
        icon: 'üèØ',
        color: '#dc3545',
        description: 'Bia H√† N·ªôi truy·ªÅn th·ªëng'
      };
    case 'chaihg':
      return {
        name: 'Bia Chai Ho√†ng Gia', 
        icon: 'üëë',
        color: '#ffc107',
        description: 'Bia Chai Ho√†ng Gia cao c·∫•p'
      };
    case 'river':
    default:
      return {
        name: 'Bia River',
        icon: 'üç∫', 
        color: '#007bff',
        description: 'Bia River th·ªß c√¥ng'
      };
  }
};